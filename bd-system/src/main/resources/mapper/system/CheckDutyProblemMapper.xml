<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bd.system.mapper.CheckDutyProblemMapper">
    
    <resultMap type="CheckDutyProblem" id="CheckDutyProblemResult">
        <result property="problemId"    column="problem_id"    />
        <result property="problemName"    column="problem_name"    />
        <result property="starts"    column="starts"    />
        <result property="zScore"    column="z_score"    />
    </resultMap>
	
	<sql id="selectCheckDutyProblemVo">
        select problem_id, problem_name, starts, z_score from check_duty_problem
    </sql>
	
    <select id="selectCheckDutyProblemList" parameterType="CheckDutyProblem" resultMap="CheckDutyProblemResult">
        <include refid="selectCheckDutyProblemVo"/>
        <where>  
            <if test="problemId != null "> and problem_id = #{problemId}</if>
             <if test="problemName != null  and problemName != '' "> and problem_name = #{problemName}</if>
             <if test="starts != null "> and starts = #{starts}</if>
             <if test="zScore != null "> and z_score = #{zScore}</if>
         </where>
    </select>
    
    <select id="selectCheckDutyProblemById" parameterType="Integer" resultMap="CheckDutyProblemResult">
        <include refid="selectCheckDutyProblemVo"/>
        where problem_id = #{problemId}
    </select>
        
    <insert id="insertCheckDutyProblem" parameterType="CheckDutyProblem" useGeneratedKeys="true" keyProperty="problemId">
        insert into check_duty_problem
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="problemName != null  and problemName != ''  ">problem_name,</if>
			<if test="starts != null  ">starts,</if>
			<if test="zScore != null  ">z_score,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="problemName != null  and problemName != ''  ">#{problemName},</if>
			<if test="starts != null  ">#{starts},</if>
			<if test="zScore != null  ">#{zScore},</if>
         </trim>
    </insert>
	 
    <update id="updateCheckDutyProblem" parameterType="CheckDutyProblem">
        update check_duty_problem
        <trim prefix="SET" suffixOverrides=",">
            <if test="problemName != null  and problemName != ''  ">problem_name = #{problemName},</if>
            <if test="starts != null  ">starts = #{starts},</if>
            <if test="zScore != null  ">z_score = #{zScore},</if>
        </trim>
        where problem_id = #{problemId}
    </update>

	<delete id="deleteCheckDutyProblemById" parameterType="Integer">
        delete from check_duty_problem where problem_id = #{problemId}
    </delete>
	
    <delete id="deleteCheckDutyProblemByIds" parameterType="String">
        delete from check_duty_problem where problem_id in 
        <foreach item="problemId" collection="array" open="(" separator="," close=")">
            #{problemId}
        </foreach>
    </delete>
    
</mapper>