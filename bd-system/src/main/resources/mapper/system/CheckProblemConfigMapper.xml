<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bd.system.mapper.CheckProblemConfigMapper">
    
    <resultMap type="CheckProblemConfig" id="CheckProblemConfigResult">
        <result property="problemConfigId"    column="problem_config_id"    />
        <result property="deptId"    column="dept_id"    />
        <result property="itemId"    column="item_id"    />
        <result property="itemName"    column="item_name"    />
        <result property="percent"    column="percent"    />
        <result property="raction"    column="raction"    />
        <result property="subItemId"    column="sub_item_id"    />
        <result property="subItemName"    column="sub_item_name"    />
        <result property="problemId"    column="problem_id"    />
        <result property="deptName"    column="dept_name"    />
        <result property="problemName"    column="problem_name"    />
    </resultMap>
	
	<sql id="selectCheckProblemConfigVo">
        select cpc.problem_config_id, cpc.dept_id, cpc.item_id, cpc.percent, cpc.raction, cpc.sub_item_id, cpc.problem_id,
        d.dept_name,cp.problem_name,sdd.dict_label sub_item_name,sdd1.dict_label item_name
        from check_problem_config cpc
        left join sys_dept d on d.dept_id = cpc.dept_id
        left join check_problem cp on cp.problem_id = cpc.problem_id
        left join sys_dict_data sdd on sdd.dict_value = cpc.sub_item_id and sdd.dict_type = 'check_config_subItem'
        left join sys_dict_data sdd1 on sdd1.dict_value = cpc.item_id and sdd1.dict_type = 'check_config_item'
    </sql>
	
    <select id="selectCheckProblemConfigList" parameterType="CheckProblemConfig" resultMap="CheckProblemConfigResult">
        <include refid="selectCheckProblemConfigVo"/>
        <where>  
            <if test="problemConfigId != null "> and problem_config_id = #{problemConfigId}</if>
             <if test="deptId != null "> and dept_id = #{deptId}</if>
             <if test="itemId != null  and itemId != '' "> and item_id = #{itemId}</if>
             <if test="percent != null "> and percent = #{percent}</if>
             <if test="raction != null "> and raction = #{raction}</if>
             <if test="subItemId != null  and subItemId != '' "> and sub_item_id = #{subItemId}</if>
             <if test="problemId != null "> and problem_id = #{problemId}</if>
         </where>
    </select>
    
    <select id="selectCheckProblemConfigById" parameterType="Integer" resultMap="CheckProblemConfigResult">
        <include refid="selectCheckProblemConfigVo"/>
        where problem_config_id = #{problemConfigId}
    </select>

    <insert id="insertCheckProblemConfig" parameterType="CheckProblemConfig" useGeneratedKeys="true" keyProperty="problemConfigId">
        insert into check_problem_config
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="deptId != null  ">dept_id,</if>
			<if test="itemId != null  and itemId != ''  ">item_id,</if>
			<if test="percent != null  ">percent,</if>
			<if test="raction != null  ">raction,</if>
			<if test="subItemId != null  and subItemId != ''  ">sub_item_id,</if>
			<if test="problemId != null  ">problem_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="deptId != null  ">#{deptId},</if>
			<if test="itemId != null  and itemId != ''  ">#{itemId},</if>
			<if test="percent != null  ">#{percent},</if>
			<if test="raction != null  ">#{raction},</if>
			<if test="subItemId != null  and subItemId != ''  ">#{subItemId},</if>
			<if test="problemId != null  ">#{problemId},</if>
         </trim>
    </insert>
	 
    <update id="updateCheckProblemConfig" parameterType="CheckProblemConfig">
        update check_problem_config
        <trim prefix="SET" suffixOverrides=",">
            <if test="deptId != null  ">dept_id = #{deptId},</if>
            <if test="itemId != null  and itemId != ''  ">item_id = #{itemId},</if>
            <if test="percent != null  ">percent = #{percent},</if>
            <if test="raction != null  ">raction = #{raction},</if>
            <if test="subItemId != null  and subItemId != ''  ">sub_item_id = #{subItemId},</if>
            <if test="problemId != null  ">problem_id = #{problemId},</if>
        </trim>
        where problem_config_id = #{problemConfigId}
    </update>

	<delete id="deleteCheckProblemConfigById" parameterType="Integer">
        delete from check_problem_config where problem_config_id = #{problemConfigId}
    </delete>
	
    <delete id="deleteCheckProblemConfigByIds" parameterType="String">
        delete from check_problem_config where problem_config_id in 
        <foreach item="problemConfigId" collection="array" open="(" separator="," close=")">
            #{problemConfigId}
        </foreach>
    </delete>


    <resultMap type="com.bd.system.vo.ProblemVO" id="ProblemResult">
        <result property="percent"    column="percent"    />
        <result property="raction"    column="raction"    />
        <result property="problemItemId"    column="problem_item_id"    />
        <result property="problemName"    column="problem_name"    />
    </resultMap>
    <select id="selectCheckProblemConfig" resultMap="ProblemResult">
        SELECT
            cpi.problem_item_id,cp.problem_name,cpc.percent,cpc.raction
        FROM
            check_problem_config cpc
            LEFT JOIN check_problem cp ON cpc.problem_id = cp.problem_id
            left join check_problem_Item cpi on cpc.dept_id = cpi.dept_id and cpc.item_id = cpi.item_id and cpc.sub_item_id = cpi.sub_item_id
        where cpc.dept_id = #{deptId} and cpc.item_id = #{itemId} and cpc.sub_item_id = #{subItemId}

    </select>


</mapper>